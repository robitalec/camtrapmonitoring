% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval.R
\name{eval_buffer}
\alias{eval_buffer}
\title{Evaluate camera trap locations by buffered sampling of layers}
\usage{
eval_buffer(features, target, buffer_size, buffer_fun = mean, layer = 1)
}
\arguments{
\item{features}{sf features (see \code{\link[sf:sf]{sf::st_sf()}})}

\item{target}{SpatRaster target (see \code{\link[terra:rast]{terra::rast()}})}

\item{buffer_size}{radius of buffer around each point}

\item{buffer_fun}{function for summarizing buffer region, default mean}

\item{layer}{default 1, see \code{\link[terra:extract]{terra::extract()}}}
}
\value{
vector of values from target matching buffered locations in features
}
\description{
Using buffered camera trap locations generated with \code{camtrapmonitoring}
functions \code{\link[=sample_ct]{sample_ct()}} and \code{\link[=grid_ct]{grid_ct()}}, sample raster layers to
characterize and select camera trap locations, and quantify potential
sampling bias.
}
\examples{
library(terra)

data("clearwater_lake_density")
clearwater_lake_elevation <- rast(system.file('extdata',
  'clearwater_lake_elevation.tif', package = 'camtrapmonitoring'))

# Sample points
pts <- sample_ct(region = clearwater_lake_density, 1, type = 'random')

# Make grid with queen's case
queen <- grid_ct(features = pts, case = 'queen', distance = 100)

# Evaluate each point with the land cover layer
queen$elev <- eval_buffer(
  features = queen, target = clearwater_lake_elevation, buffer_size = 150)

plot(queen["elev"])
}
\seealso{
Other eval: 
\code{\link{eval_dist}()},
\code{\link{eval_pt}()}
}
\concept{eval}

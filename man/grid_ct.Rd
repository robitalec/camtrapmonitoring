% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid-ct.R
\name{grid_ct}
\alias{grid_ct}
\title{Make camera trap grids}
\usage{
grid_ct(features, distance, case, n, id = "id_sample_ct")
}
\arguments{
\item{features}{sf features (see \code{\link[sf:sf]{sf::st_sf()}})}

\item{distance}{distance between adjacent camera traps. Don't worry about
the hypotenuse.}

\item{case}{"queen", "rook" or "bishop". Ignored if \code{n} is provided.}

\item{n}{number of points around each focal point. \code{n} overrides the \code{case}
argument, do not provide both - see Details.}

\item{id}{default: "id_sample_ct" generated automatically from \code{\link[=sample_ct]{sample_ct()}}}
}
\value{
Extended sf object either nine times the length of input features for
'queen' case or 5 times the length of input DT for 'rook' or 'bishop' case.
Otherwise n * number the length of input features. See examples.

The logical 'focal' column indicates which point is the focal camera trap for
each grid.
}
\description{
Set up grids around focal points. For example, sample points in your study
area with \code{\link[=sample_ct]{sample_ct()}} then use \code{\link[=grid_ct]{grid_ct()}} to establish a grid of camera
traps around each.
}
\examples{
data("clearwater_lake_density")
pts <- sample_ct(clearwater_lake_density, 1, type = 'random')

# Make grid with case, eg. 'queen'
queen <- grid_ct(features = pts, distance = 100, case = 'queen')

# Plot
plot(queen['focal'])

# Make grid with n
n_grid <- grid_ct(features = pts, distance = 100, n = 25)
plot(n_grid['id_grid_ct'])
}
\seealso{
Other grid: 
\code{\link{grid_design}()}
}
\concept{grid}

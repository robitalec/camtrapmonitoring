% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/etc-ct.R
\name{grid_ct}
\alias{grid_ct}
\title{Make camera trap grids}
\usage{
grid_ct(x, n, case, distance, id = NULL, coords = NULL)
}
\arguments{
\item{x}{data.table or sf points.}

\item{n}{number of points around each focal point. \code{n} overrides the \code{case} argument, do not provide both. See details.}

\item{case}{"queen", "rook" or "bishop". Ignored if \code{n} is provided.}

\item{distance}{distance between adjacent camera traps. Don't worry about the hypotenuse.}

\item{id}{column in \code{x} indicating id of focal point. Only used when x is a \code{data.table}.}

\item{coords}{columns in \code{x} indicating names of coordinate columns of focal point. Only used when x is a \code{data.table}. Expects length = 2 e.g.: c('X', 'Y').}
}
\value{
Extended data.table either nine times the length of input DT for 'queen' case or 5 times the length of input DT for 'rook' or 'bishop' case. See examples.

The logical 'focal' column indicates which point is the focal or center camera trap.
}
\description{
Set up grids around focal points. For example, sample points in your study area and use \code{grid_ct} to establish a grid of camera traps around each.
}
\examples{
# Point data (sf object)
library(sf)
data(points)
plot(points)

## Make grid with case
queen <- grid_ct(points, case = 'queen', distance = 100)
plot(queen)

# Focal individuals
plot(queen['focal'])

rook <- grid_ct(points, case = 'rook', distance = 100)
plot(rook)

bishop <- grid_ct(points, case = 'bishop', distance = 100)
plot(bishop)

## Make grid with n
grid <- grid_ct(points, n = 25, distance = 100)
plot(grid)

# data.table input
library(data.table)
DT <- data.table(ID = points$ID, st_coordinates(points))
grid <- grid_ct(DT, case = 'queen', distance = 100, id = 'ID', coords = c('X', 'Y'))
}

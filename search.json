[{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"sampling-candidate-camera-trap-locations","dir":"Articles","previous_headings":"","what":"Sampling candidate camera trap locations","title":"Introduction to camtrapmonitoring","text":"sample_ct function returns candidate camera trap locations using sf::st_sample across user’s region interest. Options include “regular”, “random” “hexagonal” sampling across entire region interest stratified column provided features. example data “clearwater_lake_density” simulated species density grid near Clearwater Lake, Manitoba. simple feature collection polygons column named “density” (High, Medium, Low). randomly sample candidate camera trap locations, stratified simulated species density.","code":"data(\"clearwater_lake_density\")  plot(clearwater_lake_density, key.width = lcm(5)) pts <- sample_ct(     region = clearwater_lake_density,      n = 25,      type = 'random',      strata = 'density' )  plot(pts)"},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"evaluating-candidate-camera-trap-locations","dir":"Articles","previous_headings":"","what":"Evaluating candidate camera trap locations","title":"Introduction to camtrapmonitoring","text":"evaluate candidate camera trap locations, determine spatial layer required criteria associated . example: Deployment feasibility point sample buffered point sample distance Characteristics candidate locations point sample distance distance ","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"deployment-feasibility","dir":"Articles","previous_headings":"Evaluating candidate camera trap locations","what":"Deployment feasibility","title":"Introduction to camtrapmonitoring","text":"First, evaluate deployment feasibility layers. Note example elevation data external TIF file can loaded {terra} package. eval_* family functions return vector values candidate camera trap location. vectors can added simple features objects using base R df$name <- value syntax (shown ) dplyr::mutate. eval_* functions take ‘features’ (candidate camera trap locations) ‘target’ covariate evaluate candidate location . eval_pt eval_buffer, ‘target’ covariates expected raster layers eval_dist expects ‘target’ vector object.","code":"# Load data clearwater_lake_elevation_path <- system.file('extdata', 'clearwater_lake_elevation.tif', package = 'camtrapmonitoring') clearwater_lake_elevation <- rast(clearwater_lake_elevation_path)  data(\"clearwater_lake_roads\")    # Evaluate elevation using point sample pts$elev_pt <- eval_pt(features = pts, target = clearwater_lake_elevation)  # Evaluate elevation using buffered point sample pts$elev_buffer_1e3 <- eval_buffer(     features = pts,      target = clearwater_lake_elevation,     buffer_size = 1e3 )  # Evaluate distance to roads pts$road_dist <- eval_dist(features = pts, target = clearwater_lake_roads)    # Plot results plot(pts)"},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"characteristics-of-candidate-locations","dir":"Articles","previous_headings":"Evaluating candidate camera trap locations","what":"Characteristics of candidate locations","title":"Introduction to camtrapmonitoring","text":"Next, evaluate characteristics candidate locations. Note example land cover data external TIF file can loaded {terra} package.","code":"# Load data clearwater_lake_land_cover_path <- system.file('extdata', 'clearwater_lake_land_cover.tif', package = 'camtrapmonitoring') clearwater_lake_land_cover <- rast(clearwater_lake_land_cover_path)  data(\"clearwater_lake_hydro\") data(\"clearwater_lake_wetlands\")    # Evaluate land cover using point sample pts$lc_pt <- eval_pt(features = pts, target = clearwater_lake_land_cover)  # Evaluate distance to hydrology pts$hydro_dist <- eval_dist(features = pts, target = clearwater_lake_hydro)  # Evaluate distance to wetland pts$wetland_dist <- eval_dist(features = pts, target = clearwater_lake_wetlands)    # Plot results plot(pts)"},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"selection-from-candidate-camera-trap-locations","dir":"Articles","previous_headings":"","what":"Selection from candidate camera trap locations","title":"Introduction to camtrapmonitoring","text":"select camera trap locations, define criteria selecting sorting candidate locations. Criteria selection: Maximum distance roads: 3000 m Maximum elevation: 300 m Select forest land cover classes: 1, 2, 5, 6 Criteria sorting: Nearer wetlands Farther major lakes","code":"# Selection criteria max_road_dist_m <- 3000 max_elev_m <- 300 ls_lc_classes <- c(1, 2, 5, 6)  # Select out of candidate points select_pts <- pts[pts$road_dist < max_road_dist_m &                                         pts$elev_pt < max_elev_m &                                         pts$lc_pt %in% ls_lc_classes,]  plot(select_pts) # Sorting criteria ordered <- order(select_pts$wetland_dist, -select_pts$hydro_dist)  order_select_pts <- select_pts[ordered,] print(order_select_pts) #> Simple feature collection with 13 features and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 348753.9 ymin: 5976171 xmax: 373940 ymax: 6003547 #> Projected CRS: WGS 84 / UTM zone 14N #> First 10 features: #>    density                 geometry id_sample_ct elev_pt elev_buffer_1e3 #> 5     High POINT (354717.5 5985540)            5     269        269.5343 #> 8     High POINT (351498.8 5983514)            8     268        271.7721 #> 11    High POINT (354625.1 5979959)           11     275        275.3254 #> 2     High POINT (348753.9 6003547)            2     282        281.8610 #> 42  Medium POINT (358820.3 5980669)           42     267        265.9832 #> 44  Medium POINT (361376.3 5983129)           44     260        261.4750 #> 14    High   POINT (353884 5978380)           14     278        278.6967 #> 18    High POINT (352891.6 5977248)           18     285        284.7702 #> 72     Low POINT (372515.6 5982226)           72     266        268.3518 #> 49  Medium POINT (364829.2 5983276)           49     271        269.8838 #>    road_dist lc_pt hydro_dist wetland_dist #> 5  2194.1787     1  2258.0258     3214.875 #> 8   665.8719     1  4742.9562     5273.502 #> 11 2211.2435     1  3472.6203     8622.409 #> 2  2912.4271     1  7902.1060     8966.136 #> 42 1756.1313     1  2110.1676     9480.703 #> 44   55.7302     1   130.5067     9536.244 #> 14 1832.7872     1  5207.9455    10125.558 #> 18 1649.8594     1  6690.7769    11258.102 #> 72 1507.0668     5  2200.3337    11874.956 #> 49  370.6776     1  1005.3348    12467.073"},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"establishing-camera-trap-grids","dir":"Articles","previous_headings":"","what":"Establishing camera trap grids","title":"Introduction to camtrapmonitoring","text":"function grid_ct allows user establish sampling grids around focal locations selected . grid_design function provided user help explore grid layout options, using either ‘case’ argument ‘n’ argument.   grid design selected, grid_ct function can used selected camera trap locations.","code":"plot(grid_design(distance = 100, case = 'queen')) plot(grid_design(distance = 250, n = 13)) ct_grids <- grid_ct(     features = order_select_pts,     distance = 500,     case = 'queen' )  plot(ct_grids['id_grid_ct'][1])"},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"example-data-sources","dir":"Articles","previous_headings":"","what":"Example data sources","title":"Introduction to camtrapmonitoring","text":"Example data used {camtrapmonitoring} package come open data sources gratefully acknowledge help page data set. Also see “data-raw” directory package source full data preprocessing steps. ?clearwater_lake_density ?clearwater_lake_elevation ?clearwater_lake_hydro ?clearwater_lake_land_cover ?clearwater_lake_roads","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alec L. Robitaille. Author, maintainer.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Robitaille (2023). camtrapmonitoring: Camera Trap Monitoring Estimating Wildlife Density. R package version 0.11.3.9000, https://robitalec.github.io/camtrapmonitoring/.","code":"@Manual{,   title = {camtrapmonitoring: Camera Trap Monitoring For Estimating Wildlife Density},   author = {Alec L. Robitaille},   year = {2023},   note = {R package version 0.11.3.9000},   url = {https://robitalec.github.io/camtrapmonitoring/}, }"},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Camera Trap Monitoring For Estimating Wildlife Density","text":"can install development version camtrapmonitoring : package depends {sf}, {terra}, {distanceto}. details installation : sf: Installing terra: Installing","code":"# r-universe install.packages('camtrapmonitoring', repos = c('https://robitalec.r-universe.dev', 'https://cloud.r-project.org'))  # Or {remotes} remotes::install_github('robitalec/camtrapmonitoring')"},{"path":"https://robitalec.github.io/camtrapmonitoring/index.html","id":"name","dir":"","previous_headings":"","what":"Name","title":"Camera Trap Monitoring For Estimating Wildlife Density","text":"package previously named {wildcam} renamed {camtrapmonitoring} reflect broadened scope package planning camera trap surveys community based monitoring wildlife density estimation, avoid confusion projects using camera traps named wildcam similar.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary layer — binary_layer","title":"Binary layer — binary_layer","text":"Helper function make binary raster layer input target.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary layer — binary_layer","text":"","code":"binary_layer(target, fun = \"equals\", value, layer = 1)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary layer — binary_layer","text":"target SpatRaster target fun character indicating function use compare layer value. One 'equals', 'gt', 'gte', 'lt', 'lte' ''. Default: 'equals'. value numeric value target. see Details. layer default 1, see terra::extract","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary layer — binary_layer","text":"binary raster (SpatRaster) two values: TRUE pixel matches 'value' provided given provided function FALSE pixel match 'value' provided given provided function 'value' may length 1 'fun' one : 'equals', 'gt', 'gte', 'lt', 'lte'. 'value' may greater length 1 'fun' : ''.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary layer — binary_layer","text":"Find pixels given function ('fun') matching value ('value') return binary raster.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary layer — binary_layer","text":"","code":"library(terra) #> terra 1.7.39 clearwater_lc_path <- system.file(\"extdata\",   \"clearwater_lake_land_cover.tif\", package = \"camtrapmonitoring\") clearwater_lake_land_cover <- rast(clearwater_lc_path)  bin <- binary_layer(target = clearwater_lake_land_cover,   fun = 'equals', value = 18)  plot(bin)   # fun = 'in' bin <- binary_layer(target = clearwater_lake_land_cover,   fun = 'in', value = c(1, 2))  plot(bin)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/camtrapmonitoring.html","id":null,"dir":"Reference","previous_headings":"","what":"camtrapmonitoring — camtrapmonitoring","title":"camtrapmonitoring — camtrapmonitoring","text":"Evaluating potential camera trap locations. Potential locations evaluated using relevant spatial layers producing dataset selected locations covariates can used quantify sampling bias. Soon - density estimation methods.","code":""},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/camtrapmonitoring.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"camtrapmonitoring — camtrapmonitoring","text":"Maintainer: Alec L. Robitaille robit.alec@gmail.com (ORCID)","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Example species density — clearwater_lake_density","title":"Example species density — clearwater_lake_density","text":"dataset containing simulated species density near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example species density — clearwater_lake_density","text":"","code":"clearwater_lake_density"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_density.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example species density — clearwater_lake_density","text":"sf object 272 features 1 variable \"density\".","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example species density — clearwater_lake_density","text":"Simulated species density three levels \"High\", \"Medium\", Low\" probabilities 0.1, 0.3, 0.6. Grid size 2 km x 2 km.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example species density — clearwater_lake_density","text":"","code":"library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE data(clearwater_lake_density) plot(clearwater_lake_density)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_elevation.html","id":null,"dir":"Reference","previous_headings":"","what":"Example elevation — clearwater_lake_elevation","title":"Example elevation — clearwater_lake_elevation","text":"dataset containing elevation near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_elevation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example elevation — clearwater_lake_elevation","text":"external tif file read terra SpatRaster object.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_elevation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example elevation — clearwater_lake_elevation","text":"Hollister, J.W. (2022). elevatr: Access Elevation Data Various APIs. R package version 0.4.2. https://CRAN.R-project.org/package=elevatr/","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_elevation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example elevation — clearwater_lake_elevation","text":"Elevation data AWS using elevatr package. units meters.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_elevation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example elevation — clearwater_lake_elevation","text":"","code":"library(terra) clearwater_elev_path <- system.file(\"extdata\",   \"clearwater_lake_elevation.tif\", package = \"camtrapmonitoring\") clearwater_lake_elevation <- rast(clearwater_elev_path) plot(clearwater_lake_elevation)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_extent.html","id":null,"dir":"Reference","previous_headings":"","what":"Example extent — clearwater_lake_extent","title":"Example extent — clearwater_lake_extent","text":"dataset containing extent near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_extent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example extent — clearwater_lake_extent","text":"","code":"clearwater_lake_extent"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_extent.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example extent — clearwater_lake_extent","text":"sf object 2 points.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_extent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example extent — clearwater_lake_extent","text":"","code":"library(sf) data(clearwater_lake_extent) plot(clearwater_lake_extent)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":null,"dir":"Reference","previous_headings":"","what":"Example hydrology features — clearwater_lake_hydro","title":"Example hydrology features — clearwater_lake_hydro","text":"dataset containing hydrology features (case, major lakes) near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example hydrology features — clearwater_lake_hydro","text":"","code":"clearwater_lake_hydro"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example hydrology features — clearwater_lake_hydro","text":"sf object 5 features 8 fields. See source details.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example hydrology features — clearwater_lake_hydro","text":"Mark Padgham, Bob Rudis, Robin Lovelace, Maëlle Salmon (2017). “osmdata.” Journal Open Source Software, 2(14), 305. doi:10.21105/joss.00305 https://doi.org/10.21105/joss.00305, https://joss.theoj.org/papers/10.21105/joss.00305.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example hydrology features — clearwater_lake_hydro","text":"Hydrology features Open Street Map, downloaded using osmdata package.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example hydrology features — clearwater_lake_hydro","text":"","code":"library(sf) data(clearwater_lake_hydro) plot(clearwater_lake_hydro)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_land_cover.html","id":null,"dir":"Reference","previous_headings":"","what":"Example land cover — clearwater_lake_land_cover","title":"Example land cover — clearwater_lake_land_cover","text":"dataset containing land cover classes near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_land_cover.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example land cover — clearwater_lake_land_cover","text":"external tif file read terra SpatRaster object. See source details.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_land_cover.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example land cover — clearwater_lake_land_cover","text":"https://open.canada.ca/data/en/dataset/ee1580ab-a23d-4f86-a09b-79763677eb47","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_land_cover.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example land cover — clearwater_lake_land_cover","text":"Land cover data 2020 Land Cover Canada. Class index defined https://drive.google.com/file/d/1TvOZdLO_N86HfsiJQtnE3BdfAFL1s0ux/view?usp=sharing 1 Temperate sub-polar needleleaf forest/Forêt de conifères sempervirente tempérée ou subpolaire 2 Sub-polar taiga needleleaf forest/ Forêt de conifères (taïga) subpolaire 5 Temperate sub-polar broadleaf deciduous forest/ Forêt feuillue tempérée ou subpolaire 6 Mixed forest/ Forêt mixte 8 Temperate sub-polar shrubland/Arbustaie tempérée ou subpolaire 10 Temperate sub-polar grassland/Prairie tempérée ou subpolaire 11 Sub-polar polar shrubland-lichen-moss/Arbustaie à lichens et à mousses polaire ou subpolaire 12 Sub-polar polar grassland-lichen-moss/Prairie à lichens et à mousses polaire ou subpolaire 13 Sub-polar polar barren-lichen-moss/Lande à lichens et à mousses polaire ou subpolaire 14 Wetland/Milieu humide 15 Cropland/Terre cultivée 16 Barren Lands/Lande 17 Urban built-/Milieu urbain 18 Water/Eau 19 Snow Ice/Neige et glace","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_land_cover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example land cover — clearwater_lake_land_cover","text":"","code":"library(terra) clearwater_lc_path <- system.file(\"extdata\",   \"clearwater_lake_land_cover.tif\", package = \"camtrapmonitoring\") clearwater_lake_land_cover <- rast(clearwater_lc_path) plot(clearwater_lake_land_cover)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":null,"dir":"Reference","previous_headings":"","what":"Example roads — clearwater_lake_roads","title":"Example roads — clearwater_lake_roads","text":"dataset containing roads near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example roads — clearwater_lake_roads","text":"","code":"clearwater_lake_roads"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example roads — clearwater_lake_roads","text":"sf object 172 roads 48 variables. See source details.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example roads — clearwater_lake_roads","text":"https://open.canada.ca/data/en/dataset/3d282116-e556-400c-9306-ca1a3cada77f","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example roads — clearwater_lake_roads","text":"Roads Canadian National Road Network (NRN) corresponding fields.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example roads — clearwater_lake_roads","text":"","code":"library(sf) data(clearwater_lake_roads) plot(clearwater_lake_roads) #> Warning: plotting the first 9 out of 48 attributes; use max.plot = 48 to plot all"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":null,"dir":"Reference","previous_headings":"","what":"Example wetland features — clearwater_lake_wetlands","title":"Example wetland features — clearwater_lake_wetlands","text":"dataset containing wetland features near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example wetland features — clearwater_lake_wetlands","text":"","code":"clearwater_lake_wetlands"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example wetland features — clearwater_lake_wetlands","text":"sf object 5 features 8 fields. See source details.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example wetland features — clearwater_lake_wetlands","text":"Mark Padgham, Bob Rudis, Robin Lovelace, Maëlle Salmon (2017). “osmdata.” Journal Open Source Software, 2(14), 305. doi:10.21105/joss.00305 https://doi.org/10.21105/joss.00305, https://joss.theoj.org/papers/10.21105/joss.00305.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example wetland features — clearwater_lake_wetlands","text":"Hydrology features Open Street Map, downloaded using osmdata package.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example wetland features — clearwater_lake_wetlands","text":"","code":"library(sf) data(clearwater_lake_wetlands) plot(clearwater_lake_wetlands)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","title":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","text":"Using buffered camera trap locations generated camtrapmonitoring functions sample_ct() grid_ct(), sample raster layers characterize select camera trap locations, quantify potential sampling bias.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","text":"","code":"eval_buffer(features, target, buffer_size, buffer_fun = mean, layer = 1)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","text":"features sf features target SpatRaster target buffer_size radius buffer around point buffer_fun function summarizing buffer region, default mean layer default 1, see terra::extract","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","text":"vector values target matching buffered locations features","code":""},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_buffer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","text":"","code":"library(terra)  data(\"clearwater_lake_density\") clearwater_lake_elevation <- rast(system.file('extdata',   'clearwater_lake_elevation.tif', package = 'camtrapmonitoring'))  # Sample points pts <- sample_ct(region = clearwater_lake_density, 1, type = 'random')  # Make grid with queen's case queen <- grid_ct(features = pts, case = 'queen', distance = 100)  # Evaluate each point with the land cover layer queen$elev <- eval_buffer(   features = queen, target = clearwater_lake_elevation, buffer_size = 150)  plot(queen[\"elev\"])"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate distance-to — eval_dist","title":"Evaluate distance-to — eval_dist","text":"Using camera trap locations generated camtrapmonitoring functions sample_ct() grid_ct(), evalaute distance features camera trap locations characterize select locations, quantify potential sampling bias.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate distance-to — eval_dist","text":"","code":"eval_dist(features, target, measure = NULL)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate distance-to — eval_dist","text":"features sf features target sf target measure measure type see geodist::geodist details","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate distance-to — eval_dist","text":"vector distances target features","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate distance-to — eval_dist","text":"avoid large overhead creating distance rasters small/medium number sample points, vector-based distance determines nearest feature (layer) target calculates distance pair.","code":""},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate distance-to — eval_dist","text":"","code":"data(\"clearwater_lake_density\") data(\"clearwater_lake_wetlands\")  # Sample points pts <- sample_ct(region = clearwater_lake_density, 1, type = 'random')  # Make grid with queen's case queen <- grid_ct(features = pts, case = 'queen', distance = 100)  # Evaluate each point with the land cover layer queen$dist_wetland <- eval_dist(features = queen, target = clearwater_lake_wetlands)  # Plot plot(queen[\"dist_wetland\"])"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_pt.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate camera trap locations by point sampling layers — eval_pt","title":"Evaluate camera trap locations by point sampling layers — eval_pt","text":"Using camera trap locations generated camtrapmonitoring functions sample_ct() grid_ct(), sample raster layers characterize select camera trap locations, quantify potential sampling bias.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_pt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate camera trap locations by point sampling layers — eval_pt","text":"","code":"eval_pt(features, target, layer = 1)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_pt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate camera trap locations by point sampling layers — eval_pt","text":"features sf features target SpatRaster target layer default 1, see terra::extract","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_pt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate camera trap locations by point sampling layers — eval_pt","text":"vector values target matching locations features","code":""},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_pt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate camera trap locations by point sampling layers — eval_pt","text":"","code":"library(terra)  data(\"clearwater_lake_density\") clearwater_lake_land_cover <- rast(system.file('extdata',   'clearwater_lake_land_cover.tif', package = 'camtrapmonitoring'))  # Sample points pts <- sample_ct(region = clearwater_lake_density, n = 1, type = 'random')  # Make grid with queen's case queen <- grid_ct(features = pts, case = 'queen', distance = 100)  # Evaluate each point with the land cover layer queen$lc <- eval_pt(features = queen, target = clearwater_lake_land_cover)  plot(queen[\"lc\"])"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Make camera trap grids — grid_ct","title":"Make camera trap grids — grid_ct","text":"Set grids around focal points. example, sample points study area sample_ct use grid_ct establish grid camera traps around .","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make camera trap grids — grid_ct","text":"","code":"grid_ct(features, distance, case, n, id = \"id_sample_ct\")"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make camera trap grids — grid_ct","text":"features sf features distance distance adjacent camera traps. worry hypotenuse. case \"queen\", \"rook\" \"bishop\". Ignored n provided. n number points around focal point. n overrides case argument, provide - see Details. id default: \"id_sample_ct\" generated automatically sample_ct","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make camera trap grids — grid_ct","text":"Extended sf object either nine times length input features 'queen' case 5 times length input DT 'rook' 'bishop' case. Otherwise n * number length input features. See examples. logical 'focal' column indicates point focal camera trap grid.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_ct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make camera trap grids — grid_ct","text":"","code":"data(\"clearwater_lake_density\") pts <- sample_ct(clearwater_lake_density, 1, type = 'random')  # Make grid with case, eg. 'queen' queen <- grid_ct(features = pts, distance = 100, case = 'queen')  # Plot plot(queen['focal'])   # Make grid with n n_grid <- grid_ct(features = pts, distance = 100, n = 25) plot(n_grid['id_grid_ct'])"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid design — grid_design","title":"Grid design — grid_design","text":"Helper function used internally grid_ct establish grids around focal locations. Provided user explore grid design options applying data.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid design — grid_design","text":"","code":"grid_design(distance, case, n)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid design — grid_design","text":"distance distance adjacent camera traps. worry hypotenuse. case \"queen\", \"rook\" \"bishop\". Ignored n provided. n number points around focal point. n overrides case argument, provide - see Details.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid design — grid_design","text":"grid design data.frame","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid design — grid_design","text":"","code":"plot(grid_design(distance = 100, case = 'queen'))  plot(grid_design(distance = 100, n = 13))"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/sample_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Camera trap sampling — sample_ct","title":"Camera trap sampling — sample_ct","text":"Sample potential camera trap locations. stratified sampling, provide suitable column stratify region . Alternatively, st_sample used directly sample points across features.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/sample_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Camera trap sampling — sample_ct","text":"","code":"sample_ct(region, n, type, strata = NULL)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/sample_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Camera trap sampling — sample_ct","text":"region spatial feature object across points sampled n number random points. strata provided, n represents number random points per strata type type sampling, see st_sample strata column name region indicating strata","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/sample_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Camera trap sampling — sample_ct","text":"sf object POINT geometry","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/sample_ct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Camera trap sampling — sample_ct","text":"","code":"# Example grid with density levels (High, Medium, Low) data(clearwater_lake_density)  # Stratified random points for each density level pts_random <- sample_ct(   region = clearwater_lake_density, n = 20,   type = 'random', strata = 'density')  # Plot density grid and sampled points plot(clearwater_lake_density, reset = FALSE) plot(pts_random, add = TRUE, pch = 1, strata = 1) #> Warning: ignoring all but the first attribute   # Regular sampled points across all features pts_regular <- sample_ct(   region = clearwater_lake_density, n = 20, type = 'regular')  # Plot density grid and sampled points plot(clearwater_lake_density, reset = FALSE) plot(pts_regular, add = TRUE, pch = 2, strata = 1)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/scale_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale in region of interest — scale_layer","title":"Scale in region of interest — scale_layer","text":"Helper function scale target layer region interest. Can used compare locations eval_pt() eval_buffer(), select locations based relative values instead absolute values.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/scale_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale in region of interest — scale_layer","text":"","code":"scale_layer(target, region, center = TRUE, scale = TRUE)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/scale_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale in region of interest — scale_layer","text":"target SpatRaster target region object can passed terra::ext() including sf, Spatial, Raster objects 2x2 matrices. center see terra::scale() scale see terra::scale()","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/scale_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale in region of interest — scale_layer","text":"SpatRaster layer, cropped extent provided region, scaled.","code":""},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/scale_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale in region of interest — scale_layer","text":"","code":"# Load packages library(terra)  # Load data data(\"clearwater_lake_hydro\") clearwater_elev_path <- system.file(   \"extdata\", \"clearwater_lake_elevation.tif\", package = \"camtrapmonitoring\") clearwater_lake_elevation <- rast(clearwater_elev_path)  # Region of interest around Clearwater lake roi <- clearwater_lake_hydro[4,]  # Scale elevation in extent of density grid elev_scaled <- scale_layer(target = clearwater_lake_elevation, region = roi)"},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01139000-2023-07-25","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.11.3.9000 (2023-07-25)","title":"camtrapmonitoring 0.11.3.9000 (2023-07-25)","text":"initial pkgdown site #15","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01129000-2023-07-25","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.11.2.9000 (2023-07-25)","title":"camtrapmonitoring 0.11.2.9000 (2023-07-25)","text":"fixed R CMD checks #14","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01119000-2023-07-25","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.11.1.9000 (2023-07-25)","title":"camtrapmonitoring 0.11.1.9000 (2023-07-25)","text":"removed select_ct useful alternative structure developed, see PR #12 fixed tests match large refactoring since v0.9.0.9000 #13","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01109000-2023-07-25","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.11.0.9000 (2023-07-25)","title":"camtrapmonitoring 0.11.0.9000 (2023-07-25)","text":"reflect broadened scope package planning camera trap surveys community based monitoring wildlife avoid confusion projects using camera traps named wildcam similar","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01019000-2023-07-13","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.10.1.9000 (2023-07-13)","title":"camtrapmonitoring 0.10.1.9000 (2023-07-13)","text":"edits introductory vignette #9 replaced leftover raster terra #10","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01009000-2023-07-13","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.10.0.9000 (2023-07-13)","title":"camtrapmonitoring 0.10.0.9000 (2023-07-13)","text":"adds dependency distanceto replaced raster terra #7 delete old example data #4 document new data #6","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0919000-2023-07-06","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.9.1.9000 (2023-07-06)","title":"camtrapmonitoring 0.9.1.9000 (2023-07-06)","text":"density elevation (external tif) extent hydro land cover (external tif) roads wetlands add scripts track data origin data-raw/ #3 reorganize source code #5","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0909000-2023-07-05","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.9.0.9000 (2023-07-05)","title":"camtrapmonitoring 0.9.0.9000 (2023-07-05)","text":"move main development https://gitlab.com/robitalec/camtrapmonitoring https://github.com/robitalec/camtrapmonitoring rough draft intro vignette #1","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0829000-2019-06-10","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.8.2.9000 (2019-06-10)","title":"camtrapmonitoring 0.8.2.9000 (2019-06-10)","text":"changed select_ct‘s argument ’sub’ accept expression, directly passed data.table’s without join step.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0819000-2019-06-08","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.8.1.9000 (2019-06-08)","title":"camtrapmonitoring 0.8.1.9000 (2019-06-08)","text":"improved select_ct checks tests","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0809000-2019-06-01","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.8.0.9000 (2019-06-01)","title":"camtrapmonitoring 0.8.0.9000 (2019-06-01)","text":"added function binary_layer making binary raster layers equi non-equi functions (e.g. =, >, <=, %%) !11. rename scale_roi scale_layer #22. rename strat_sample sample_ct #21 !17.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0709000-2019-05-30","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.7.0.9000 (2019-05-30)","title":"camtrapmonitoring 0.7.0.9000 (2019-05-30)","text":"rename dist_to eval_dist add attributes like eval_* #19 !12. add basic data.table data (DT) fix preprocessing passing methods function_ eval_pt, eval_dist (skeleton), eval_buffer grid_ct !15 rename make_grid grid_ct !14 return focal identifier make_grid. fix ‘camID’ returned sf method incorrectly. fix lack error attributes null #20. return ‘camID’ make_grid !10.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0609000-2019-02-26","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.6.0.9000 (2019-02-26)","title":"camtrapmonitoring 0.6.0.9000 (2019-02-26)","text":"Add select_ct selecting camera trap locations ‘x’ !9. Add ‘n’ argument make_grid specify grid size instead ‘case’ !8. Add ‘type’ argument strat_sample regular random sampling. !6.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0509000-2019-02-21","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.5.0.9000 (2019-02-21)","title":"camtrapmonitoring 0.5.0.9000 (2019-02-21)","text":"Add scale_roi rescaling rasters region interest !5. Add “dem” example data.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0409000-2019-02-21","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.4.0.9000 (2019-02-21)","title":"camtrapmonitoring 0.4.0.9000 (2019-02-21)","text":"Add eval_pt eval_buffer evaluating characterizing camera trap locations !4. Add “wetland” “lc” example data.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0309000-2019-02-15","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.3.0.9000 (2019-02-15)","title":"camtrapmonitoring 0.3.0.9000 (2019-02-15)","text":"Add make_grid making camera trap grids around focal cameras !3.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0209000-2019-02-12","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.2.0.9000 (2019-02-12)","title":"camtrapmonitoring 0.2.0.9000 (2019-02-12)","text":"Add dist_to distance calculations !2. Add “water” example data.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0109000-2019-02-11","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.1.0.9000 (2019-02-11)","title":"camtrapmonitoring 0.1.0.9000 (2019-02-11)","text":"Add strat_sample stratified polygon sampling !1. Add “points” “densitygrid” example data.","code":""}]

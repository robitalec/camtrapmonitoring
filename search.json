[{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"sampling-candidate-camera-trap-locations","dir":"Articles","previous_headings":"","what":"Sampling candidate camera trap locations","title":"Introduction to camtrapmonitoring","text":"sample_ct function returns candidate camera trap locations using sf::st_sample across user’s region interest. Options include “regular”, “random” “hexagonal” sampling across entire region interest stratified column provided features. example data “clearwater_lake_density” simulated species density grid near Clearwater Lake, Manitoba. simple feature collection polygons column named “density” (High, Medium, Low). randomly sample candidate camera trap locations, stratified simulated species density.","code":"data(\"clearwater_lake_density\")  plot(clearwater_lake_density, key.width = lcm(5)) pts <- sample_ct(     clearwater_lake_density,      n = 25,      type = 'random',      col = 'density' )  plot(pts)"},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"evaluating-candidate-camera-trap-locations","dir":"Articles","previous_headings":"","what":"Evaluating candidate camera trap locations","title":"Introduction to camtrapmonitoring","text":"evaluate candidate camera trap locations, determine spatial layer required criteria associated . example: Deployment feasibility point sample buffered point sample distance Characteristics candidate locations point sample distance distance ","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"deployment-feasibility","dir":"Articles","previous_headings":"Evaluating candidate camera trap locations","what":"Deployment feasibility","title":"Introduction to camtrapmonitoring","text":"First, evaluate deployment feasibility layers. Note example elevation data external TIF file can loaded {terra} package. eval_* family functions return vector values candidate camera trap location. vectors can added simple features objects using common df$name <- value syntax.","code":"# Load data clearwater_lake_elevation_path <- system.file('extdata', 'clearwater_lake_elevation.tif', package = 'camtrapmonitoring') clearwater_lake_elevation <- rast(clearwater_lake_elevation_path)  data(\"clearwater_lake_roads\")    # Evaluate elevation using point sample pts$elev_pt <- eval_pt(clearwater_lake_elevation, pts)  # Evaluate elevation using buffered point sample pts$elev_buffer_1e3 <- eval_buffer(clearwater_lake_elevation, pts, buffer_size = 1e3)  # Evaluate distance to roads pts$road_dist <- eval_dist(clearwater_lake_roads, pts)    # Plot results plot(pts)"},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"characteristics-of-candidate-locations","dir":"Articles","previous_headings":"Evaluating candidate camera trap locations","what":"Characteristics of candidate locations","title":"Introduction to camtrapmonitoring","text":"Next, evaluate characteristics candidate locations. Note example land cover data external TIF file can loaded {terra} package.","code":"# Load data clearwater_lake_land_cover_path <- system.file('extdata', 'clearwater_lake_land_cover.tif', package = 'camtrapmonitoring') clearwater_lake_land_cover <- rast(clearwater_lake_land_cover_path)  data(\"clearwater_lake_hydro\") data(\"clearwater_lake_wetlands\")    # Evaluate land cover using point sample pts$lc_pt <- eval_pt(clearwater_lake_land_cover, pts)  # Evaluate distance to hydrology pts$hydro_dist <- eval_dist(clearwater_lake_hydro, pts)  # Evaluate distance to wetland pts$wetland_dist <- eval_dist(clearwater_lake_wetlands, pts)    # Plot results plot(pts)"},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"selection-from-candidate-camera-trap-locations","dir":"Articles","previous_headings":"","what":"Selection from candidate camera trap locations","title":"Introduction to camtrapmonitoring","text":"select camera trap locations, define criteria selecting sorting candidate locations. Criteria selection: Maximum distance roads: 3000 m Maximum elevation: 300 m Select forest land cover classes: 1, 2, 5, 6 Criteria sorting: Nearer wetlands Farther major lakes","code":"# Selection criteria max_road_dist_m <- 3000 max_elev_m <- 300 ls_lc_classes <- c(1, 2, 5, 6)  # Select out of candidate points select_pts <- pts[pts$road_dist < max_road_dist_m &                                         pts$elev_pt < max_elev_m &                                         pts$lc_pt %in% ls_lc_classes,]  plot(select_pts) # Sorting criteria ordered <- order(select_pts$wetland_dist, -select_pts$hydro_dist)  order_select_pts <- select_pts[ordered,] print(order_select_pts) #> Simple feature collection with 16 features and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 348065.1 ymin: 5976809 xmax: 376384.1 ymax: 5995169 #> Projected CRS: WGS 84 / UTM zone 14N #> First 10 features: #>    density                 geometry id_sample_ct elev_pt elev_buffer_1e3 #> 42  Medium POINT (376384.1 5991837)           42     266        265.7071 #> 75     Low   POINT (375080 5990816)           75     262        265.9848 #> 55     Low POINT (348065.1 5995169)           55     290        281.2413 #> 48  Medium POINT (355766.2 5983745)           48     262        262.8263 #> 37  Medium POINT (356696.2 5981795)           37     269        268.0942 #> 24    High   POINT (354962 5980981)           24     271        271.7804 #> 9     High POINT (348106.8 5982397)            9     265        270.8327 #> 43  Medium POINT (376260.1 5985554)           43     271        266.6228 #> 27  Medium   POINT (357351 5980797)           27     268        268.0661 #> 3     High   POINT (373198 5983368)            3     267        267.5212 #>    road_dist lc_pt hydro_dist wetland_dist #> 42 1595.4444     1   887.6704     1594.510 #> 75 1656.5851     1   433.5982     2944.823 #> 55 1810.6192     1  3751.7453     4299.671 #> 48  439.4817     1   502.9173     5282.222 #> 37  878.6622     1  1054.8419     7443.011 #> 24 1176.6617     1  2442.4285     7670.431 #> 9   338.0870     5  4476.9978     7769.735 #> 43  633.5108     1  1362.5165     7877.956 #> 27 1543.5550     1  2094.1097     8627.421 #> 3   988.1112     1  1549.2816    10575.189"},{"path":"https://robitalec.github.io/camtrapmonitoring/articles/intro-camtrapmonitoring.html","id":"example-data-sources","dir":"Articles","previous_headings":"","what":"Example data sources","title":"Introduction to camtrapmonitoring","text":"Example data used {camtrapmonitoring} package come open data sources gratefully acknowledge help page data set. Also see “data-raw” directory package source full data preprocessing steps. ?clearwater_lake_density ?clearwater_lake_elevation ?clearwater_lake_hydro ?clearwater_lake_land_cover ?clearwater_lake_roads","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alec L. Robitaille. Author, maintainer.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Robitaille (2023). camtrapmonitoring: Camera Trap Monitoring Estimating Wildlife Density. R package version 0.11.2.9000, https://robitalec.github.io/camtrapmonitoring/.","code":"@Manual{,   title = {camtrapmonitoring: Camera Trap Monitoring For Estimating Wildlife Density},   author = {Alec L. Robitaille},   year = {2023},   note = {R package version 0.11.2.9000},   url = {https://robitalec.github.io/camtrapmonitoring/}, }"},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Camera Trap Monitoring For Estimating Wildlife Density","text":"can install development version camtrapmonitoring : package depends sf, terra, distanceto. details installation : sf: Installing terra: Installing","code":"remotes::install_github(\"robitalec/camtrapmonitoring\")"},{"path":"https://robitalec.github.io/camtrapmonitoring/index.html","id":"name","dir":"","previous_headings":"","what":"Name","title":"Camera Trap Monitoring For Estimating Wildlife Density","text":"package previously named {wildcam} renamed {camtrapmonitoring} reflect broadened scope package planning camera trap surveys community based monitoring wildlife density estimation, avoid confusion projects using camera traps named wildcam similar.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary layer — binary_layer","title":"Binary layer — binary_layer","text":"Make binary raster layer input x.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary layer — binary_layer","text":"","code":"binary_layer(x, value, fun = \"equals\", layer = 1)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary layer — binary_layer","text":"x SpatRaster layer (terra package) value numeric value x. see Details. fun character indicating function use compare layer value. One 'equals', 'gt', 'gte', 'lt', 'lte' ''. Default: 'equals'. layer default 1, see terra::extract","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary layer — binary_layer","text":"binary raster two values: TRUE pixel matches 'value' provided FALSE pixel match 'value' provided. 'value' may length 1 'fun' one : 'equals', 'gt', 'gte', 'lt', 'lte'. 'value' may greater length 1 'fun' : ''.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary layer — binary_layer","text":"Find pixels matching 'value' provided given 'fun' return binary raster.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/binary_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary layer — binary_layer","text":"","code":"library(terra) #> terra 1.7.39 clearwater_lc_path <- system.file(\"extdata\",   \"clearwater_lake_land_cover.tif\", package = \"camtrapmonitoring\") clearwater_lake_land_cover <- rast(clearwater_lc_path)  bin <- binary_layer(clearwater_lake_land_cover, 18, fun = 'equals')  plot(bin)   # fun = 'in' bin <- binary_layer(clearwater_lake_land_cover, c(1, 2), fun = 'in')  plot(bin)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/camtrapmonitoring.html","id":null,"dir":"Reference","previous_headings":"","what":"camtrapmonitoring — camtrapmonitoring","title":"camtrapmonitoring — camtrapmonitoring","text":"Evaluating potential camera trap locations. Potential locations evaluated using relevant spatial layers producing dataset selected locations covariates can used quantify sampling bias. Soon - density estimation methods.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/camtrapmonitoring.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"camtrapmonitoring — camtrapmonitoring","text":"Maintainer: Alec L. Robitaille robit.alec@gmail.com (ORCID)","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Example species density — clearwater_lake_density","title":"Example species density — clearwater_lake_density","text":"dataset containing simulated species density near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example species density — clearwater_lake_density","text":"","code":"clearwater_lake_density"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_density.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example species density — clearwater_lake_density","text":"sf object 272 features 1 variable \"density\".","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example species density — clearwater_lake_density","text":"Simulated species density three levels \"High\", \"Medium\", Low\" probabilities 0.1, 0.3, 0.6. Grid size 2 km x 2 km.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example species density — clearwater_lake_density","text":"","code":"library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE data(clearwater_lake_density) plot(clearwater_lake_density)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_elevation.html","id":null,"dir":"Reference","previous_headings":"","what":"Example elevation — clearwater_lake_elevation","title":"Example elevation — clearwater_lake_elevation","text":"dataset containing elevation near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_elevation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example elevation — clearwater_lake_elevation","text":"external tif file read terra SpatRaster object.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_elevation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example elevation — clearwater_lake_elevation","text":"Hollister, J.W. (2022). elevatr: Access Elevation Data Various APIs. R package version 0.4.2. https://CRAN.R-project.org/package=elevatr/","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_elevation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example elevation — clearwater_lake_elevation","text":"Elevation data AWS using elevatr package. units meters.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_elevation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example elevation — clearwater_lake_elevation","text":"","code":"library(terra) clearwater_elev_path <- system.file(\"extdata\",   \"clearwater_lake_elevation.tif\", package = \"camtrapmonitoring\") clearwater_lake_elevation <- rast(clearwater_elev_path) plot(clearwater_lake_elevation)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_extent.html","id":null,"dir":"Reference","previous_headings":"","what":"Example extent — clearwater_lake_extent","title":"Example extent — clearwater_lake_extent","text":"dataset containing extent near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_extent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example extent — clearwater_lake_extent","text":"","code":"clearwater_lake_extent"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_extent.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example extent — clearwater_lake_extent","text":"sf object 2 points.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_extent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example extent — clearwater_lake_extent","text":"","code":"library(sf) data(clearwater_lake_extent) plot(clearwater_lake_extent)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":null,"dir":"Reference","previous_headings":"","what":"Example hydrology features — clearwater_lake_hydro","title":"Example hydrology features — clearwater_lake_hydro","text":"dataset containing hydrology features (case, major lakes) near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example hydrology features — clearwater_lake_hydro","text":"","code":"clearwater_lake_hydro"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example hydrology features — clearwater_lake_hydro","text":"sf object 5 features 8 fields. See source details.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example hydrology features — clearwater_lake_hydro","text":"Mark Padgham, Bob Rudis, Robin Lovelace, Maëlle Salmon (2017). “osmdata.” Journal Open Source Software, 2(14), 305. doi:10.21105/joss.00305 https://doi.org/10.21105/joss.00305, https://joss.theoj.org/papers/10.21105/joss.00305.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example hydrology features — clearwater_lake_hydro","text":"Hydrology features Open Street Map, downloaded using osmdata package.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_hydro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example hydrology features — clearwater_lake_hydro","text":"","code":"library(sf) data(clearwater_lake_hydro) plot(clearwater_lake_hydro)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_land_cover.html","id":null,"dir":"Reference","previous_headings":"","what":"Example land cover — clearwater_lake_land_cover","title":"Example land cover — clearwater_lake_land_cover","text":"dataset containing land cover classes near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_land_cover.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example land cover — clearwater_lake_land_cover","text":"external tif file read terra SpatRaster object. See source details.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_land_cover.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example land cover — clearwater_lake_land_cover","text":"https://open.canada.ca/data/en/dataset/ee1580ab-a23d-4f86-a09b-79763677eb47","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_land_cover.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example land cover — clearwater_lake_land_cover","text":"Land cover data 2020 Land Cover Canada. Class index defined https://drive.google.com/file/d/1TvOZdLO_N86HfsiJQtnE3BdfAFL1s0ux/view?usp=sharing 1 Temperate sub-polar needleleaf forest/Forêt de conifères sempervirente tempérée ou subpolaire 2 Sub-polar taiga needleleaf forest/ Forêt de conifères (taïga) subpolaire 5 Temperate sub-polar broadleaf deciduous forest/ Forêt feuillue tempérée ou subpolaire 6 Mixed forest/ Forêt mixte 8 Temperate sub-polar shrubland/Arbustaie tempérée ou subpolaire 10 Temperate sub-polar grassland/Prairie tempérée ou subpolaire 11 Sub-polar polar shrubland-lichen-moss/Arbustaie à lichens et à mousses polaire ou subpolaire 12 Sub-polar polar grassland-lichen-moss/Prairie à lichens et à mousses polaire ou subpolaire 13 Sub-polar polar barren-lichen-moss/Lande à lichens et à mousses polaire ou subpolaire 14 Wetland/Milieu humide 15 Cropland/Terre cultivée 16 Barren Lands/Lande 17 Urban built-/Milieu urbain 18 Water/Eau 19 Snow Ice/Neige et glace","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_land_cover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example land cover — clearwater_lake_land_cover","text":"","code":"library(terra) clearwater_lc_path <- system.file(\"extdata\",   \"clearwater_lake_land_cover.tif\", package = \"camtrapmonitoring\") clearwater_lake_land_cover <- rast(clearwater_lc_path) plot(clearwater_lake_land_cover)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":null,"dir":"Reference","previous_headings":"","what":"Example roads — clearwater_lake_roads","title":"Example roads — clearwater_lake_roads","text":"dataset containing roads near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example roads — clearwater_lake_roads","text":"","code":"clearwater_lake_roads"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example roads — clearwater_lake_roads","text":"sf object 172 roads 48 variables. See source details.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example roads — clearwater_lake_roads","text":"https://open.canada.ca/data/en/dataset/3d282116-e556-400c-9306-ca1a3cada77f","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example roads — clearwater_lake_roads","text":"Roads Canadian National Road Network (NRN) corresponding fields.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_roads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example roads — clearwater_lake_roads","text":"","code":"library(sf) data(clearwater_lake_roads) plot(clearwater_lake_roads) #> Warning: plotting the first 9 out of 48 attributes; use max.plot = 48 to plot all"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":null,"dir":"Reference","previous_headings":"","what":"Example wetland features — clearwater_lake_wetlands","title":"Example wetland features — clearwater_lake_wetlands","text":"dataset containing wetland features near Clearwater Lake, Manitoba.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example wetland features — clearwater_lake_wetlands","text":"","code":"clearwater_lake_wetlands"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example wetland features — clearwater_lake_wetlands","text":"sf object 5 features 8 fields. See source details.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example wetland features — clearwater_lake_wetlands","text":"Mark Padgham, Bob Rudis, Robin Lovelace, Maëlle Salmon (2017). “osmdata.” Journal Open Source Software, 2(14), 305. doi:10.21105/joss.00305 https://doi.org/10.21105/joss.00305, https://joss.theoj.org/papers/10.21105/joss.00305.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example wetland features — clearwater_lake_wetlands","text":"Hydrology features Open Street Map, downloaded using osmdata package.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/clearwater_lake_wetlands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example wetland features — clearwater_lake_wetlands","text":"","code":"library(sf) data(clearwater_lake_wetlands) plot(clearwater_lake_wetlands)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","title":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","text":"Using buffered points locations generated manually camtrapmonitoring functions sample_ct() grid_ct(), sample raster layers characterize select camera trap locations, quantify potential sampling bias.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","text":"","code":"eval_buffer(x, y, buffer_size, buffer_fun = mean, layer = 1)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","text":"x SpatRaster layer (terra package) y spatial feature object buffer_size radius buffer around point buffer_fun function summarizing buffer region, default mean layer default 1, see terra::extract","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","text":"vector values x matching buffered locations y","code":""},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_buffer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate camera trap locations by buffered sampling of layers — eval_buffer","text":"","code":"library(terra)  data(\"clearwater_lake_density\") clearwater_lake_elevation <- rast(system.file('extdata',   'clearwater_lake_elevation.tif', package = 'camtrapmonitoring'))  # Sample points pts <- sample_ct(clearwater_lake_density, 1, type = 'random')  # Make grid with queen's case queen <- grid_ct(pts, case = 'queen', distance = 100)  # Evaluate each point with the land cover layer queen$elev <- eval_buffer(   x = clearwater_lake_elevation, y = queen, buffer_size = 150)  plot(queen[\"elev\"])"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate distance-to — eval_dist","title":"Evaluate distance-to — eval_dist","text":"Evaluates locations x measuring distance nearest feature layer.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate distance-to — eval_dist","text":"","code":"eval_dist(x, y, measure = NULL)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate distance-to — eval_dist","text":"x SpatRaster layer (terra package) y spatial feature object measure measure type see geodist::geodist details","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate distance-to — eval_dist","text":"vector distances x y Note attributes returned like eval_pt eval_buffer. type attribute distance feature (layer) \"real\" direction left user provide.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate distance-to — eval_dist","text":"avoid large overhead creating distance rasters small/medium number sample points, vector-based distance determines nearest feature (layer) x calculates distance pair.","code":""},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate distance-to — eval_dist","text":"","code":"data(\"clearwater_lake_density\") data(\"clearwater_lake_wetlands\")  # Sample points pts <- sample_ct(clearwater_lake_density, 1, type = 'random')  # Make grid with queen's case queen <- grid_ct(pts, case = 'queen', distance = 100)  # Evaluate each point with the land cover layer queen$dist_wetland <- eval_dist(x = clearwater_lake_wetlands, y = queen)  # Plot plot(queen[\"dist_wetland\"])"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_pt.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate camera trap locations by point sampling layers — eval_pt","title":"Evaluate camera trap locations by point sampling layers — eval_pt","text":"Using point locations generated manually camtrapmonitoring functions sample_ct() grid_ct(), sample raster layers characterize select camera trap locations, quantify potential sampling bias.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_pt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate camera trap locations by point sampling layers — eval_pt","text":"","code":"eval_pt(x, y, layer = 1)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_pt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate camera trap locations by point sampling layers — eval_pt","text":"x SpatRaster layer (terra package) y spatial feature object layer default 1, see terra::extract","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_pt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate camera trap locations by point sampling layers — eval_pt","text":"vector values x matching locations y","code":""},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/eval_pt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate camera trap locations by point sampling layers — eval_pt","text":"","code":"library(terra)  data(\"clearwater_lake_density\") clearwater_lake_land_cover <- rast(system.file('extdata',   'clearwater_lake_land_cover.tif', package = 'camtrapmonitoring'))  # Sample points pts <- sample_ct(clearwater_lake_density, 1, type = 'random')  # Make grid with queen's case queen <- grid_ct(pts, case = 'queen', distance = 100)  # Evaluate each point with the land cover layer queen$lc <- eval_pt(x = clearwater_lake_land_cover, y = queen)  plot(queen[\"lc\"])"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Make camera trap grids — grid_ct","title":"Make camera trap grids — grid_ct","text":"Set grids around focal points. example, sample points study area sample_ct use grid_ct establish grid camera traps around .","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make camera trap grids — grid_ct","text":"","code":"grid_ct(x, case, distance, id = \"id_sample_ct\", n)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make camera trap grids — grid_ct","text":"x spatial feature object case \"queen\", \"rook\" \"bishop\". Ignored n provided. distance distance adjacent camera traps. worry hypotenuse. id default: \"id_sample_ct\" generated automatically sample_ct n number points around focal point. n overrides case argument, provide - see Details.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make camera trap grids — grid_ct","text":"Extended sf object either nine times length input x 'queen' case 5 times length input DT 'rook' 'bishop' case. Otherwise n * number length input x. See examples. logical 'focal' column indicates point focal center camera trap.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/grid_ct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make camera trap grids — grid_ct","text":"","code":"data(\"clearwater_lake_density\") pts <- sample_ct(clearwater_lake_density, 1, type = 'random')  # Make grid with case, eg. 'queen' queen <- grid_ct(pts, case = 'queen', distance = 100)  # Plot plot(queen['focal'])   # Make grid with n n_grid <- grid_ct(pts, n = 25, distance = 100) plot(n_grid['id_grid_ct'])"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/sample_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Camera trap sampling — sample_ct","title":"Camera trap sampling — sample_ct","text":"Sample potential camera trap locations. stratified sampling, provide suitable column stratify . Alternatively, st_sample used directly sample points across features.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/sample_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Camera trap sampling — sample_ct","text":"","code":"sample_ct(x, n, type, col = NULL)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/sample_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Camera trap sampling — sample_ct","text":"x spatial feature object n number random points, column name provided col n represents number random points per strata type type sampling, see st_sample col column name x indicating strata","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/sample_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Camera trap sampling — sample_ct","text":"sf object POINT geometry","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/sample_ct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Camera trap sampling — sample_ct","text":"","code":"# Example grid with density levels (High, Medium, Low) data(clearwater_lake_density)  # Stratified random points for each density level pts_random <- sample_ct(   x = clearwater_lake_density, n = 20,   type = 'random', col = 'density')  # Plot density grid and sampled points plot(clearwater_lake_density, reset = FALSE) plot(pts_random, add = TRUE, pch = 1) #> Warning: ignoring all but the first attribute   # Regular sampled points across all features pts_regular <- sample_ct(   x = clearwater_lake_density, n = 20, type = 'regular')  # Plot density grid and sampled points plot(clearwater_lake_density, reset = FALSE) plot(pts_regular, add = TRUE, pch = 2)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/scale_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale in region of interest — scale_layer","title":"Scale in region of interest — scale_layer","text":"Scale layer region interest optionally compare locations eval_pt() eval_buffer(), select locations based relative values instead absolute values.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/scale_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale in region of interest — scale_layer","text":"","code":"scale_layer(x, roi, center = TRUE, scale = TRUE)"},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/scale_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale in region of interest — scale_layer","text":"x SpatRaster layer (terra package) roi object can passed extent including sf, Spatial, Raster objects 2x2 matrices. center see terra::scale scale see terra::scale","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/scale_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale in region of interest — scale_layer","text":"SpatRaster layer, cropped extent provided 'roi', scaled.","code":""},{"path":[]},{"path":"https://robitalec.github.io/camtrapmonitoring/reference/scale_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale in region of interest — scale_layer","text":"","code":"# Load packages library(terra)  # Load data clearwater_elev_path <- system.file(   \"extdata\", \"clearwater_lake_elevation.tif\", package = \"camtrapmonitoring\") clearwater_lake_elevation <- rast(clearwater_elev_path)  # Region of interest: Clearwater lake area roi <- ext(clearwater_lake_elevation)  # Scale elevation in extent of density grid elev_scaled <- scale_layer(clearwater_lake_elevation, roi)"},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01129000-2023-07-25","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.11.2.9000 (2023-07-25)","title":"camtrapmonitoring 0.11.2.9000 (2023-07-25)","text":"fixed R CMD checks #14","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01119000-2023-07-25","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.11.1.9000 (2023-07-25)","title":"camtrapmonitoring 0.11.1.9000 (2023-07-25)","text":"removed select_ct useful alternative structure developed, see PR #12 fixed tests match large refactoring since v0.9.0.9000 #13","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01109000-2023-07-25","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.11.0.9000 (2023-07-25)","title":"camtrapmonitoring 0.11.0.9000 (2023-07-25)","text":"reflect broadened scope package planning camera trap surveys community based monitoring wildlife avoid confusion projects using camera traps named wildcam similar","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01019000-2023-07-13","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.10.1.9000 (2023-07-13)","title":"camtrapmonitoring 0.10.1.9000 (2023-07-13)","text":"edits introductory vignette #9 replaced leftover raster terra #10","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-01009000-2023-07-13","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.10.0.9000 (2023-07-13)","title":"camtrapmonitoring 0.10.0.9000 (2023-07-13)","text":"adds dependency distanceto replaced raster terra #7 delete old example data #4 document new data #6","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0919000-2023-07-06","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.9.1.9000 (2023-07-06)","title":"camtrapmonitoring 0.9.1.9000 (2023-07-06)","text":"density elevation (external tif) extent hydro land cover (external tif) roads wetlands add scripts track data origin data-raw/ #3 reorganize source code #5","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0909000-2023-07-05","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.9.0.9000 (2023-07-05)","title":"camtrapmonitoring 0.9.0.9000 (2023-07-05)","text":"move main development https://gitlab.com/robitalec/camtrapmonitoring https://github.com/robitalec/camtrapmonitoring rough draft intro vignette #1","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0829000-2019-06-10","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.8.2.9000 (2019-06-10)","title":"camtrapmonitoring 0.8.2.9000 (2019-06-10)","text":"changed select_ct‘s argument ’sub’ accept expression, directly passed data.table’s without join step.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0819000-2019-06-08","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.8.1.9000 (2019-06-08)","title":"camtrapmonitoring 0.8.1.9000 (2019-06-08)","text":"improved select_ct checks tests","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0809000-2019-06-01","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.8.0.9000 (2019-06-01)","title":"camtrapmonitoring 0.8.0.9000 (2019-06-01)","text":"added function binary_layer making binary raster layers equi non-equi functions (e.g. =, >, <=, %%) !11. rename scale_roi scale_layer #22. rename strat_sample sample_ct #21 !17.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0709000-2019-05-30","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.7.0.9000 (2019-05-30)","title":"camtrapmonitoring 0.7.0.9000 (2019-05-30)","text":"rename dist_to eval_dist add attributes like eval_* #19 !12. add basic data.table data (DT) fix preprocessing passing methods function_ eval_pt, eval_dist (skeleton), eval_buffer grid_ct !15 rename make_grid grid_ct !14 return focal identifier make_grid. fix ‘camID’ returned sf method incorrectly. fix lack error attributes null #20. return ‘camID’ make_grid !10.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0609000-2019-02-26","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.6.0.9000 (2019-02-26)","title":"camtrapmonitoring 0.6.0.9000 (2019-02-26)","text":"Add select_ct selecting camera trap locations ‘x’ !9. Add ‘n’ argument make_grid specify grid size instead ‘case’ !8. Add ‘type’ argument strat_sample regular random sampling. !6.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0509000-2019-02-21","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.5.0.9000 (2019-02-21)","title":"camtrapmonitoring 0.5.0.9000 (2019-02-21)","text":"Add scale_roi rescaling rasters region interest !5. Add “dem” example data.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0409000-2019-02-21","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.4.0.9000 (2019-02-21)","title":"camtrapmonitoring 0.4.0.9000 (2019-02-21)","text":"Add eval_pt eval_buffer evaluating characterizing camera trap locations !4. Add “wetland” “lc” example data.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0309000-2019-02-15","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.3.0.9000 (2019-02-15)","title":"camtrapmonitoring 0.3.0.9000 (2019-02-15)","text":"Add make_grid making camera trap grids around focal cameras !3.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0209000-2019-02-12","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.2.0.9000 (2019-02-12)","title":"camtrapmonitoring 0.2.0.9000 (2019-02-12)","text":"Add dist_to distance calculations !2. Add “water” example data.","code":""},{"path":"https://robitalec.github.io/camtrapmonitoring/news/index.html","id":"camtrapmonitoring-0109000-2019-02-11","dir":"Changelog","previous_headings":"","what":"camtrapmonitoring 0.1.0.9000 (2019-02-11)","title":"camtrapmonitoring 0.1.0.9000 (2019-02-11)","text":"Add strat_sample stratified polygon sampling !1. Add “points” “densitygrid” example data.","code":""}]
